version: '3.8'

services:
  # SQL Server 資料庫
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: gamespace-sqlserver
    environment:
      SA_PASSWORD: 'YourStrong@Passw0rd123!'
      ACCEPT_EULA: 'Y'
      MSSQL_PID: 'Express'
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - gamespace-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'YourStrong@Passw0rd123!' -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis 快取
  redis:
    image: redis:7-alpine
    container_name: gamespace-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gamespace-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # GameSpace 應用程序
  gamespace-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gamespace-app
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=GameSpaceDatabase;User Id=sa;Password=YourStrong@Passw0rd123!;TrustServerCertificate=true;MultipleActiveResultSets=true
      - ConnectionStrings__Redis=redis:6379
      - Jwt__Key=YourSuperSecretKeyThatIsAtLeast32CharactersLongForHS256
      - Jwt__Issuer=GameSpaceIssuer
      - Jwt__Audience=GameSpaceAudience
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gamespace-network
    volumes:
      - app_logs:/app/logs
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: gamespace-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - gamespace-app
    networks:
      - gamespace-network
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  gamespace-network:
    driver: bridge